/* ========================================================================
     Component: Button
   ========================================================================== */
.fu-button {
  padding: 0 8px;
  text-transform: uppercase;
  user-select: none;

  &:not(:disabled) {
    cursor: pointer;

    color: $default-color;
    /* @alternate */
    color: var(--theme-default-color-primary, $default-color);
    background: transparent;
  }

  &::before,
  &::after {
    position: absolute;
    border-radius: 50%;
    opacity: 0;
    pointer-events: none;
    content: "";

    top: calc(50% - 100%);

    /* @noflip */
    left: calc(50% - 100%);
    width: 200%;
    height: 200%;
    background: $default-color;
    /* @alternate */
    background: var(--theme-default-color-primary, $default-color);
  }

  &::after {
    transition: opacity 150ms linear;
  }

  &:hover::before {
    opacity: 0.04;
  }

  &:focus::before,
  &:active::after {
    transition-duration: 75ms;
    opacity: 0.12;
  }
}

.fu-button-dense {
  height: 32px;
  font-size: 0.8125rem;
}

.fu-button-loose {
  height: 40px;
}

/* Style modifiers
   ========================================================================== */

.fu-button-outlined,
.fu-button-contained {
  padding: 0 16px;
}

.fu-button-outlined {
  padding: 0 15px;
  border: 1px solid $default-color;
  /* @alternate */
  border-color: var(--theme-default-color-primary, $default-color);

  &:hover::before {
    opacity: 0.06;
  }

  &:focus::before,
  &:active::after {
    opacity: 0.18;
  }
}

.fu-button-contained {
  &:not(:disabled) {
    color: $on-surface-color-dark;
    background: $default-color;
    /* @alternate */
    background: var(--theme-default-color-primary, $default-color);
  }

  &::before,
  &::after {
    background: $surface-color-light;
  }

  &:hover::before {
    opacity: 0.08;
  }

  &:focus::before,
  &:active::after {
    opacity: 0.24;
  }
}

.fu-button-fade {
  border-color: $on-surface-color-light;
  /* @alternate */
  border-color: var(--theme-on-surface-color, $on-surface-color-light);

  &:not(:disabled) {
    color: $on-surface-color-light;
    /* @alternate */
    color: var(--theme-on-surface-color, $on-surface-color-light);
  }

  &.fu-button-contained:not(:disabled) {
    background: $variant-color-light;
    /* @alternate */
    background: var(--theme-variant-color, $variant-color-light);
  }

  &::before,
  &::after {
    background: $on-surface-color-light;
    /* @alternate */
    background: var(--theme-on-surface-color, $on-surface-color-light);
  }
}

/* Icon button
   ========================================================================== */

.fu-button-icon {
  /* Layout */
  display: inline-block;

  /* Box model */
  width: 18px;
  height: 18px;
  /* @noflip */
  margin-left: 0;
  margin-right: 8px;

  /* Text */
  font-size: 18px;

  /* Visual */
  color: inherit;
}

[dir="rtl"] .fu-button .fu-button-icon,
[dir="rtl"].fu-button .fu-button-icon {
  /* @noflip */
  margin-left: 8px;
  margin-right: 0;
}

svg.fu-button-icon {
  fill: currentColor;
}

.fu-button-contained .fu-button-icon,
.fu-button-outlined .fu-button-icon {
  /* @noflip */
  margin-left: -4px;
  margin-right: 8px;
}

[dir="rtl"] .fu-button-contained .fu-button-icon,
[dir="rtl"] .fu-button-outlined .fu-button-icon,
[dir="rtl"].fu-button-contained .fu-button-icon,
[dir="rtl"].fu-button-outlined .fu-button-icon {
  /* @noflip */
  margin-left: 8px;
  margin-right: -4px;
}

.fu-icon-button {
  min-width: 36px;
  padding: 0;
  border-radius: 500px;

  &.fu-button-dense {
    min-width: 32px;
  }

  &.fu-button-loose {
    min-width: 40px;
  }
}

/* Group
 ========================================================================== */
/*
 * 1. Using `flex` instead of `inline-block` to prevent whitespace betweent child elements
 * 2. Behave like button
 * 3. Create position context
 */

.fu-button-group {
  /* 1 */
  display: inline-flex;
  /* 2 */
  vertical-align: middle;
  /* 3 */
  position: relative;

  > {
    .fu-button:first-child,
    .fu-button:last-child {
      border-radius: 4px;
    }

    .fu-button:not(:first-child) {
      border-left-color: $on-surface-color-light;
      border-left-color: var(--theme-on-surface-color, $on-surface-color-light);
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    .fu-button:not(:last-child) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
}
