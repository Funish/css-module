/* ========================================================================
     Component: Button
   ========================================================================== */
.fun-button {
  height: 36px;
  padding: 0 8px;

  user-select: none;
  text-transform: uppercase;

  &:not(:disabled) {
    cursor: pointer;

    color: currentColor;
    background: transparent;
  }

  &::before,
  &::after {
    position: absolute;
    top: calc(50% - 100%);
    left: calc(50% - 100%);

    width: 200%;
    height: 200%;

    content: '';
    pointer-events: none;

    opacity: 0;
    border-radius: 50%;
    background: currentColor;
  }

  &::after {
    transition: all 150ms linear;
  }

  &:hover::before {
    opacity: 0.08;
  }

  &:focus::before,
  &:active::after {
    transition-duration: 75ms;

    opacity: 0.24;
  }
}

.fun-button-dense {
  font-size: 0.8125rem;

  height: 32px;
}

.fun-button-loose {
  height: 40px;
}

/* Style modifiers   ========================================================================== */
.fun-button-outlined {
  padding: 0 16px;

  &:not(:disabled) {
    border: 1px solid currentColor;
  }
}

.fun-button-contained {
  padding: 0 16px;

  &:not(:disabled) {
    color: $primary-text;
    background: $primary-dark;
  }

  &::before,
  &::after {
    background: currentColor;
  }
}

.fun-button-raised {
  @extend .fun-button-contained;

  &:not(:disabled) {
    transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);

    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2),
      0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
  }

  &:hover,
  &:focus {
    box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2),
      0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);
  }

  &:active {
    box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
      0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);
  }
}

/* Icon button   ========================================================================== */
.fun-button-icon {
  font-size: 18px;

  display: inline-block;

  width: 18px;
  height: 18px;
  margin-right: 8px;
  margin-left: 0;

  color: inherit;
}

.fun-button-reverse .fun-button .fun-button-icon,
.fun-button-reverse.fun-button .fun-button-icon {
  margin-right: 0;
  margin-left: 8px;
}

svg.fun-button-icon {
  fill: currentColor;
}

.fun-button-contained .fun-button-icon,
.fun-button-outlined .fun-button-icon {
  margin-right: 8px;
  margin-left: -4px;
}

.fun-button-reverse .fun-button-contained .fun-button-icon,
.fun-button-reverse .fun-button-outlined .fun-button-icon,
.fun-button-reverse.fun-button-contained .fun-button-icon,
.fun-button-reverse.fun-button-outlined .fun-button-icon {
  margin-right: -4px;
  margin-left: 8px;
}

.fun-icon-button {
  min-width: 36px;
  padding: 0;

  border-radius: 500px;

  &.fun-button-dense {
    min-width: 32px;
  }

  &.fun-button-loose {
    min-width: 40px;
  }
}

/* Group ========================================================================== */
/*
 * 1. Using `flex` instead of `inline-block` to prevent whitespace betweent child elements 
 * 2. Behave like button * 3. Create position context 
 */
.fun-button-group {
  position: relative;

  display: inline-flex;

  vertical-align: middle;

  > {
    .fun-button:first-child,
    .fun-button:last-child {
      border-radius: 4px;
    }

    .fun-button:not(:first-child) {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    .fun-button:not(:last-child) {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
}
