/* ========================================================================
     Component: Form
   ========================================================================== */
.fun-button,
.fun-form {
  position: relative;

  display: inline-flex;
  overflow: hidden;
  align-items: center;
  justify-content: center;

  box-sizing: border-box;
  min-width: 64px;

  vertical-align: middle;
  text-decoration: none;

  border: none;
  border-radius: 4px;

  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

.fun-form {
  width: 280px;
  max-width: 100%;
  height: 48px;
  padding: 0 16px;

  transition: all 75ms linear;

  &:not(:disabled) {
    color: currentColor;
    border-color: currentColor;
    background: inherit;
  }
}

.fun-form-outlined.fun-form,
.fun-form-outlined .fun-form {
  border: 1px solid;

  &:focus {
    box-shadow: inset 0 0 0 0.5px currentColor;
  }
}

.fun-form-contained.fun-form,
.fun-form-contained .fun-form {
  border: 1px solid $default;
  background: $default;
}

.fun-form-action.fun-form,
.fun-form-action .fun-form {
  border: 1px solid $default;
  background: $default;

  &:hover,
  &:focus {
    border: 0.5px solid;
    border-color: $default-text;
    background: inherit;
  }

  &:focus {
    box-shadow: inset 0 0 0 0.5px currentColor;
  }
}

textarea.fun-form {
  height: 96px;
  padding: 16px;

  resize: none;
}

/* Radio and Checkbox
   ========================================================================== */
.fun-radio,
.fun-checkbox {
  position: relative;

  width: 20px;
  height: 20px;

  cursor: pointer;
  transition: background-color 75ms linear, border-color 75ms linear;
  vertical-align: middle;

  border: 1px solid $default-dark;

  appearance: none;

  &:checked {
    border-color: $primary;
    background: $primary;
  }

  &:disabled {
    background: $default;
  }
}

.fun-radio {
  border-radius: 50%;

  &:checked {
    &::after {
      position: absolute;
      top: 50%;
      left: 50%;

      width: 4px;
      height: 4px;

      content: '';
      transform: translate(-50%, -50%);

      border-radius: 50%;
      background: $default-light;
    }
  }
}

.fun-checkbox:checked {
  background-image: url('data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2214%22%20height%3D%2211%22%20viewBox%3D%220%200%2014%2011%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23fff%22%20points%3D%2212%201%205%207.5%202%205%201%205.5%205%2010%2013%201.5%22%20%2F%3E%0A%3C%2Fsvg%3E%0A');
  background-repeat: no-repeat;
  background-position: 50% 50%;
}

/* Switch
   ========================================================================== */
.fun-switch {
  position: relative;

  width: 38px;
  height: 18px;

  cursor: pointer;
  vertical-align: middle;

  border-radius: 500px;
  background: $default-dark;

  appearance: none;

  &::after {
    position: absolute;
    top: 50%;
    left: 0;

    width: 20px;
    height: 20px;

    content: '';
    transition: all 125ms linear;
    transform: translate(0, -50%);

    border-radius: 50%;
    background: $default-light;
    box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2),
      0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
  }

  &:checked {
    background: $primary-light;

    &::after {
      transform: translate(100%, -50%);

      background: $primary;
    }
  }

  &:disabled::after {
    border: 1px solid $default-dark;
    box-shadow: none;
  }
}

/* Range
   ========================================================================== */
.fun-range {
  appearance: none;

  &::-webkit-slider-runnable-track {
    width: 100%;
    height: 2px;

    border-radius: 500px;
    background: $default-dark;
  }

  &::-webkit-slider-thumb {
    top: 50%;
    left: 0;

    width: 16px;
    height: 16px;

    transform: translate(0, -50%);

    border: 1px solid $default-dark;
    border-radius: 50%;
    background: $default-light;

    appearance: none;
  }
}

/* Form for file
   ========================================================================== */
.fun-form-file {
  display: inline-flex;

  input[type='file'] {
    display: none;
  }

  .fun-form {
    color: $primary-light;
  }
}

/* Icon form
   ========================================================================== */
/*
 * 1. Container fits its content
 * 2. Create position context
 * 3. Prevent content overflow
 * 4. Behave like most inline-block elements
 * 5. Force hardware acceleration without creating a new stacking context
 *    to fix 1px glitch when combined with overlays and transitions in Webkit
 * 6. Clip child elements
 */

.fun-icon-form {
  position: relative;

  display: inline-block;

  max-width: 100%;

  vertical-align: middle;

  backface-visibility: hidden;

  .fun-form {
    min-width: 100%;
  }
}

/*
 * 1. Set position
 * 2. Set width
 * 3. Center icon vertically and horizontally
 */

.fun-form-icon {
  position: absolute;
  z-index: 1;
  top: 0;
  bottom: 0;
  left: 0;

  display: inline-flex;
  align-items: center;
  justify-content: center;

  width: 40px;

  &:not(a):not(button):not(input) {
    pointer-events: none;
  }
}

:not(.fun-form-reverse).fun-icon-form,
:not(.fun-form-reverse) .fun-icon-form {
  .fun-form {
    padding-left: 40px;

    appearance: none;
  }
}

.fun-form-reverse.fun-icon-form,
.fun-form-reverse .fun-icon-form {
  .fun-form-icon {
    right: 0;
    left: auto;
  }

  .fun-form {
    padding-right: 40px;
    padding-left: 16px;

    appearance: none;
  }
}
