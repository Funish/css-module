/* ========================================================================
     Component: Grid
   ========================================================================== */
.fun-grid {
  display: grid;
}

.fun-grid-inline {
  display: inline-grid;
}

/* Row and column spacing
   ========================================================================== */
@each $grid, $spacing in $grid-spacings {
  .fun-grid-#{$grid} {
    grid-row-gap: #{$spacing};
    grid-column-gap: #{$spacing};
  }

  .fun-grid-row-#{$grid} {
    grid-row-gap: #{$spacing};
  }

  .fun-grid-column-#{$grid} {
    grid-column-gap: #{$spacing};
  }
}

/* Grid template
   ========================================================================== */
@for $grids from 2 through 6 {
  .fun-grid-row-1-#{$grids} {
    grid-template-rows: repeat(
      auto-fill,
      minmax(calc(#{100% / $grids} - 70px), 1fr)
    );
  }

  .fun-grid-column-1-#{$grids} {
    grid-template-columns: repeat(
      auto-fill,
      minmax(calc(#{100% / $grids} - 70px), 1fr)
    );
  }
}

@each $breakpoint, $width in $breakpoints {
  @media (min-width: #{$width}) {
    @for $grids from 2 through 6 {
      .fun-grid-row-1-#{$grids}#{$breakpoint} {
        grid-template-rows: repeat(
          auto-fill,
          minmax(calc(#{100% / $grids} - 70px), 1fr)
        );
      }

      .fun-grid-column-1-#{$grids}#{$breakpoint} {
        grid-template-columns: repeat(
          auto-fill,
          minmax(calc(#{100% / $grids} - 70px), 1fr)
        );
      }
    }
  }
}
